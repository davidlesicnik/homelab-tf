{
  "version": 4,
  "terraform_version": "1.13.3",
  "serial": 7,
  "lineage": "5fcaae52-5a4a-4c3c-9637-fadae8e0093d",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v3.0.3",
              "chart": "argo-cd",
              "first_deployed": 1761396071,
              "last_deployed": 1761396071,
              "name": "argocd",
              "namespace": "argocd",
              "notes": "\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
              "revision": 1,
              "values": "{\"configs\":{\"cm\":{\"resource.exclusions\":\"# Internal Kubernetes resources\\n- apiGroups:\\n  - coordination.k8s.io\\n  kinds:\\n  - Lease\\n\",\"url\":\"http://argocd.local\"},\"params\":{\"server.insecure\":\"true\"},\"rbac\":{\"policy.default\":\"role:admin\"}},\"server\":{\"ingress\":{\"annotations\":{\"nginx.ingress.kubernetes.io/backend-protocol\":\"HTTP\",\"nginx.ingress.kubernetes.io/force-ssl-redirect\":\"false\",\"nginx.ingress.kubernetes.io/ssl-redirect\":\"false\"},\"enabled\":true,\"hostname\":\"argocd.local\",\"ingressClassName\":\"nginx\",\"path\":\"/\",\"pathType\":\"Prefix\"}}}",
              "version": "8.0.9"
            },
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "values": [
              "\"configs\":\n  \"cm\":\n    \"resource.exclusions\": |\n      # Internal Kubernetes resources\n      - apiGroups:\n        - coordination.k8s.io\n        kinds:\n        - Lease\n    \"url\": \"http://argocd.local\"\n  \"params\":\n    \"server.insecure\": \"true\"\n  \"rbac\":\n    \"policy.default\": \"role:admin\"\n\"server\":\n  \"ingress\":\n    \"annotations\":\n      \"nginx.ingress.kubernetes.io/backend-protocol\": \"HTTP\"\n      \"nginx.ingress.kubernetes.io/force-ssl-redirect\": \"false\"\n      \"nginx.ingress.kubernetes.io/ssl-redirect\": \"false\"\n    \"enabled\": true\n    \"hostname\": \"argocd.local\"\n    \"ingressClassName\": \"nginx\"\n    \"path\": \"/\"\n    \"pathType\": \"Prefix\"\n"
            ],
            "verify": false,
            "version": "8.0.9",
            "wait": true,
            "wait_for_jobs": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "argocd",
            "release_name": "argocd"
          },
          "dependencies": [
            "kubernetes_namespace.argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "root_app",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "argoproj.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/argoproj.io/v1alpha1/namespaces/argocd/applications/root-applicationset",
            "ignore_fields": null,
            "kind": "Application",
            "live_manifest_incluster": "16c0aaf970e4ad210d1a635cfd0c350948ed9ac97e0d96306849733c8825ff43",
            "live_uid": "48c0c6f4-417f-4bb6-8696-0e480e05a637",
            "name": "root-applicationset",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "48c0c6f4-417f-4bb6-8696-0e480e05a637",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: root-applicationset\n  namespace: argocd\n  finalizers:\n    - resources-finalizer.argocd.argoproj.io\nspec:\n  project: default\n  source:\n    repoURL: https://github.com/davidlesicnik/homelab-argo\n    targetRevision: master\n    path: apps\n  destination:\n    server: https://kubernetes.default.svc\n    namespace: argocd\n  syncPolicy:\n    automated:\n      prune: true\n      selfHeal: true\n",
            "yaml_body_parsed": "apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  finalizers:\n  - resources-finalizer.argocd.argoproj.io\n  name: root-applicationset\n  namespace: argocd\nspec:\n  destination:\n    namespace: argocd\n    server: https://kubernetes.default.svc\n  project: default\n  source:\n    path: apps\n    repoURL: https://github.com/davidlesicnik/homelab-argo\n    targetRevision: master\n  syncPolicy:\n    automated:\n      prune: true\n      selfHeal: true\n",
            "yaml_incluster": "16c0aaf970e4ad210d1a635cfd0c350948ed9ac97e0d96306849733c8825ff43"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd",
            "kubernetes_namespace.argocd",
            "terraform_data.argocd_ready",
            "time_sleep.wait_for_argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding_v1",
      "name": "argocd_namespace_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd-namespace-manager",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "argocd-namespace-manager",
                "resource_version": "57945",
                "uid": "e0a8d9cf-8d93-437c-888d-739ffc9f6d08"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "argocd-namespace-manager"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "argocd-application-controller",
                "namespace": "argocd"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRoleBinding",
            "name": "argocd-namespace-manager"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "helm_release.argocd",
            "kubernetes_cluster_role_v1.argocd_namespace_manager",
            "kubernetes_namespace.argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_cluster_role_v1",
      "name": "argocd_namespace_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aggregation_rule": [],
            "id": "argocd-namespace-manager",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "argocd-namespace-manager",
                "resource_version": "57467",
                "uid": "569b06ff-c2bf-4f8a-95e2-8d31a3dec9e4"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": null,
                "resource_names": null,
                "resources": [
                  "namespaces"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch",
                  "create",
                  "update",
                  "patch",
                  "delete"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "rbac.authorization.k8s.io/v1",
            "kind": "ClusterRole",
            "name": "argocd-namespace-manager"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "pod-security.kubernetes.io/enforce": "baseline"
                },
                "name": "argocd",
                "resource_version": "57466",
                "uid": "a79ec6d9-f105-4f76-b6be-641f479cebd8"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "argocd"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "argocd_ready",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6ed72cd1-9cfd-85dc-b818-196f93312708",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.argocd",
            "kubernetes_namespace.argocd",
            "time_sleep.wait_for_argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "time_sleep",
      "name": "wait_for_argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_duration": "60s",
            "destroy_duration": null,
            "id": "2025-10-25T12:42:57Z",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.argocd",
            "kubernetes_namespace.argocd"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
