{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 68,
  "lineage": "737b8cf0-ee53-19e2-b657-42dfcf888b84",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v2.12.6",
              "chart": "argo-cd",
              "first_deployed": 1760121911,
              "last_deployed": 1760298029,
              "name": "argocd",
              "namespace": "argocd",
              "notes": "In order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
              "revision": 2,
              "values": "{\"applications\":{\"root\":{\"destination\":{\"namespace\":\"argocd\",\"server\":\"https://kubernetes.default.svc\"},\"enabled\":true,\"source\":{\"path\":\"apps\",\"repoURL\":\"https://github.com/davidlesicnik/homelab-argo\",\"targetRevision\":\"master\"},\"syncPolicy\":{\"automated\":{\"prune\":true,\"selfHeal\":true},\"syncOptions\":[\"CreateNamespace=true\"]}}},\"configs\":{\"params\":{\"server.insecure\":\"true\",\"server.url\":\"http://argocd.local\"},\"repositories\":{\"homelab-repo\":{\"type\":\"git\",\"url\":\"https://github.com/davidlesicnik/homelab-argo\"}}},\"global\":{\"domain\":\"argocd.local\"},\"server\":{\"ingress\":{\"enabled\":true,\"hosts\":[{\"host\":\"argocd.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"Prefix\"}]}],\"ingressClassName\":\"nginx\"}}}",
              "version": "7.6.12"
            },
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\"applications\":\n  \"root\":\n    \"destination\":\n      \"namespace\": \"argocd\"\n      \"server\": \"https://kubernetes.default.svc\"\n    \"enabled\": true\n    \"source\":\n      \"path\": \"apps\"\n      \"repoURL\": \"https://github.com/davidlesicnik/homelab-argo\"\n      \"targetRevision\": \"master\"\n    \"syncPolicy\":\n      \"automated\":\n        \"prune\": true\n        \"selfHeal\": true\n      \"syncOptions\":\n      - \"CreateNamespace=true\"\n\"configs\":\n  \"params\":\n    \"server.insecure\": \"true\"\n    \"server.url\": \"http://argocd.local\"\n  \"repositories\":\n    \"homelab-repo\":\n      \"type\": \"git\"\n      \"url\": \"https://github.com/davidlesicnik/homelab-argo\"\n\"global\":\n  \"domain\": \"argocd.local\"\n\"server\":\n  \"ingress\":\n    \"enabled\": true\n    \"hosts\":\n    - \"host\": \"argocd.local\"\n      \"paths\":\n      - \"path\": \"/\"\n        \"pathType\": \"Prefix\"\n    \"ingressClassName\": \"nginx\"\n"
            ],
            "verify": false,
            "version": "7.6.12",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "argocd",
            "release_name": "argocd"
          },
          "dependencies": [
            "helm_release.metallb",
            "helm_release.nginx_ingress",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.argocd",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metallb",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "metallb",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metallb",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v0.14.5",
              "chart": "metallb",
              "first_deployed": 1760121575,
              "last_deployed": 1760345338,
              "name": "metallb",
              "namespace": "metallb-system",
              "notes": "MetalLB is now running in the cluster.\n\nNow you can configure it via its CRs. Please refer to the metallb official docs\non how to use the CRs.\n",
              "revision": 3,
              "values": "{\"speaker\":{\"ignoreExcludeLB\":true}}",
              "version": "0.14.5"
            },
            "name": "metallb",
            "namespace": "metallb-system",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://metallb.github.io/metallb",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.14.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "metallb-system",
            "release_name": "metallb"
          },
          "dependencies": [
            "kubernetes_namespace.metallb_system"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nfs-provisioner-hdd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "nfs-subdir-external-provisioner",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nfs-subdir-external-provisioner-hdd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "4.0.2",
              "chart": "nfs-subdir-external-provisioner",
              "first_deployed": 1760299735,
              "last_deployed": 1760299735,
              "name": "nfs-subdir-external-provisioner-hdd",
              "namespace": "nfs-provisioner",
              "notes": "",
              "revision": 1,
              "values": "{\"nfs\":{\"path\":\"/volume1/hdd\",\"server\":\"192.168.10.9\"},\"storageClass\":{\"name\":\"nfs-client-hdd\"}}",
              "version": "4.0.18"
            },
            "name": "nfs-subdir-external-provisioner-hdd",
            "namespace": "nfs-provisioner",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\"nfs\":\n  \"path\": \"/volume1/hdd\"\n  \"server\": \"192.168.10.9\"\n\"storageClass\":\n  \"name\": \"nfs-client-hdd\"\n"
            ],
            "verify": false,
            "version": "4.0.18",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "nfs-provisioner",
            "release_name": "nfs-subdir-external-provisioner-hdd"
          },
          "dependencies": [
            "kubernetes_namespace.nfs_provisioner"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nfs-provisioner-media",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "nfs-subdir-external-provisioner",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nfs-subdir-external-provisioner-media",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "4.0.2",
              "chart": "nfs-subdir-external-provisioner",
              "first_deployed": 1760299364,
              "last_deployed": 1760299364,
              "name": "nfs-subdir-external-provisioner-media",
              "namespace": "nfs-provisioner",
              "notes": "",
              "revision": 1,
              "values": "{\"nfs\":{\"path\":\"/volume1/media\",\"server\":\"192.168.10.9\"},\"storageClass\":{\"name\":\"nfs-client-media\"}}",
              "version": "4.0.18"
            },
            "name": "nfs-subdir-external-provisioner-media",
            "namespace": "nfs-provisioner",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\"nfs\":\n  \"path\": \"/volume1/media\"\n  \"server\": \"192.168.10.9\"\n\"storageClass\":\n  \"name\": \"nfs-client-media\"\n"
            ],
            "verify": false,
            "version": "4.0.18",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "nfs-provisioner",
            "release_name": "nfs-subdir-external-provisioner-media"
          },
          "dependencies": [
            "kubernetes_namespace.nfs_provisioner"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nfs-provisioner-ssd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "nfs-subdir-external-provisioner",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nfs-subdir-external-provisioner-ssd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "4.0.2",
              "chart": "nfs-subdir-external-provisioner",
              "first_deployed": 1760299735,
              "last_deployed": 1760299735,
              "name": "nfs-subdir-external-provisioner-ssd",
              "namespace": "nfs-provisioner",
              "notes": "",
              "revision": 1,
              "values": "{\"nfs\":{\"path\":\"/volume2/ssd\",\"server\":\"192.168.10.9\"},\"storageClass\":{\"name\":\"nfs-client-ssd\"}}",
              "version": "4.0.18"
            },
            "name": "nfs-subdir-external-provisioner-ssd",
            "namespace": "nfs-provisioner",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\"nfs\":\n  \"path\": \"/volume2/ssd\"\n  \"server\": \"192.168.10.9\"\n\"storageClass\":\n  \"name\": \"nfs-client-ssd\"\n"
            ],
            "verify": false,
            "version": "4.0.18",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "nfs-provisioner",
            "release_name": "nfs-subdir-external-provisioner-ssd"
          },
          "dependencies": [
            "kubernetes_namespace.nfs_provisioner"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nginx_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-nginx",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "1.10.1",
              "chart": "ingress-nginx",
              "first_deployed": 1760121614,
              "last_deployed": 1760345341,
              "name": "ingress-nginx",
              "namespace": "ingress-nginx",
              "notes": "The ingress-nginx controller has been installed.\nIt may take a few minutes for the load balancer IP to be available.\nYou can watch the status by running 'kubectl get service --namespace ingress-nginx ingress-nginx-controller --output wide --watch'\n\nAn example Ingress that makes use of the controller:\n  apiVersion: networking.k8s.io/v1\n  kind: Ingress\n  metadata:\n    name: example\n    namespace: foo\n  spec:\n    ingressClassName: nginx\n    rules:\n      - host: www.example.com\n        http:\n          paths:\n            - pathType: Prefix\n              backend:\n                service:\n                  name: exampleService\n                  port:\n                    number: 80\n              path: /\n    # This section is only required if TLS is to be enabled for the Ingress\n    tls:\n      - hosts:\n        - www.example.com\n        secretName: example-tls\n\nIf TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:\n\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: example-tls\n    namespace: foo\n  data:\n    tls.crt: \u003cbase64 encoded cert\u003e\n    tls.key: \u003cbase64 encoded key\u003e\n  type: kubernetes.io/tls\n",
              "revision": 3,
              "values": "{\"controller\":{\"service\":{\"externalIPs\":[\"192.168.10.90\"],\"type\":\"LoadBalancer\"}}}",
              "version": "4.10.1"
            },
            "name": "ingress-nginx",
            "namespace": "ingress-nginx",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "4.10.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "ingress-nginx",
            "release_name": "ingress-nginx"
          },
          "dependencies": [
            "helm_release.metallb",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "vault",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "vault",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "1.16.1",
              "chart": "vault",
              "first_deployed": 1760300028,
              "last_deployed": 1760345352,
              "name": "vault",
              "namespace": "vault",
              "notes": "\nThank you for installing HashiCorp Vault!\n\nNow that you have deployed Vault, you should look over the docs on using\nVault with Kubernetes available here:\n\nhttps://developer.hashicorp.com/vault/docs\n\n\nYour release is named vault. To learn more about the release, try:\n\n  $ helm status vault\n  $ helm get manifest vault\n\n",
              "revision": 2,
              "values": "{\"injector\":{\"enabled\":true},\"server\":{\"dataStorage\":{\"enabled\":true,\"size\":\"10Gi\",\"storageClass\":\"nfs-client-hdd\"},\"ingress\":{\"enabled\":true,\"hosts\":[{\"host\":\"vault.local\",\"paths\":[\"/\"]}],\"ingressClassName\":\"nginx\"},\"standalone\":{\"enabled\":true}},\"ui\":{\"enabled\":true}}",
              "version": "0.28.0"
            },
            "name": "vault",
            "namespace": "vault",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.releases.hashicorp.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\"injector\":\n  \"enabled\": true\n\"server\":\n  \"dataStorage\":\n    \"enabled\": true\n    \"size\": \"10Gi\"\n    \"storageClass\": \"nfs-client-hdd\"\n  \"ingress\":\n    \"enabled\": true\n    \"hosts\":\n    - \"host\": \"vault.local\"\n      \"paths\":\n      - \"/\"\n    \"ingressClassName\": \"nginx\"\n  \"standalone\":\n    \"enabled\": true\n\"ui\":\n  \"enabled\": true\n"
            ],
            "verify": false,
            "version": "0.28.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "vault",
            "release_name": "vault"
          },
          "dependencies": [
            "helm_release.metallb",
            "helm_release.nginx_ingress",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system",
            "kubernetes_namespace.vault"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "metallb_ipaddresspool",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "metallb.io/v1beta1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/metallb.io/v1beta1/namespaces/metallb-system/ipaddresspools/default-pool",
            "ignore_fields": null,
            "kind": "IPAddressPool",
            "live_manifest_incluster": "67a5385bafdbf9f8a972155aff47419848c9032d8e4239f013255745a9b2cfbb",
            "live_uid": "8e23b980-3304-4ad9-8ebc-2322b6f20dd8",
            "name": "default-pool",
            "namespace": "metallb-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8e23b980-3304-4ad9-8ebc-2322b6f20dd8",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: default-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.90-192.168.10.99\n",
            "yaml_body_parsed": "apiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: default-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.90-192.168.10.99\n",
            "yaml_incluster": "67a5385bafdbf9f8a972155aff47419848c9032d8e4239f013255745a9b2cfbb"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.metallb",
            "kubernetes_namespace.metallb_system"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "metallb_l2advertisement",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "metallb.io/v1beta1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/metallb.io/v1beta1/namespaces/metallb-system/l2advertisements/default",
            "ignore_fields": null,
            "kind": "L2Advertisement",
            "live_manifest_incluster": "8a39d60e7e6c6a3b032278c513e89a9611ec01e169b15ec8035d9ddd0350721e",
            "live_uid": "35114263-6e4a-4af5-b642-ec53335d036d",
            "name": "default",
            "namespace": "metallb-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "35114263-6e4a-4af5-b642-ec53335d036d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: default\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - default-pool\n",
            "yaml_body_parsed": "apiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: default\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - default-pool\n",
            "yaml_incluster": "8a39d60e7e6c6a3b032278c513e89a9611ec01e169b15ec8035d9ddd0350721e"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.metallb",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubernetes_namespace.metallb_system"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "pod-security.kubernetes.io/enforce": "baseline"
                },
                "name": "argocd",
                "resource_version": "159310",
                "uid": "cb8cbd57-cd51-4b7e-b0e1-167c1699d4bc"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "argocd"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ingress-nginx",
                "resource_version": "158505",
                "uid": "04d971dc-e323-4b6e-adf3-cd1bfc1c4b57"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "ingress-nginx"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "metallb_system",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "metallb-system",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "pod-security.kubernetes.io/audit": "privileged",
                  "pod-security.kubernetes.io/enforce": "privileged",
                  "pod-security.kubernetes.io/warn": "privileged"
                },
                "name": "metallb-system",
                "resource_version": "158506",
                "uid": "0ebd657c-2362-4d1f-8221-f0b548fa5b8d"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "metallb-system"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "nfs_provisioner",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "nfs-provisioner",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "nfs-provisioner",
                "resource_version": "158507",
                "uid": "aa61e9c4-3b14-41ff-8bee-8cbea116d905"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "nfs-provisioner"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "vault",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "vault",
                "resource_version": "552352",
                "uid": "063e6b37-7a34-474d-8667-cf2b1739a598"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "vault"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    }
  ],
  "check_results": null
}
