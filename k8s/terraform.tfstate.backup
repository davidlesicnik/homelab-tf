{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 304,
  "lineage": "737b8cf0-ee53-19e2-b657-42dfcf888b84",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v2.9.2",
              "chart": "argo-cd",
              "first_deployed": 1760682189,
              "last_deployed": 1760682189,
              "name": "argocd",
              "namespace": "argocd",
              "notes": "\nDEPRECATED option server.extraArgs.\"--insecure\" - Use configs.params.server.insecure\n\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
              "revision": 1,
              "values": "{\"server\":{\"extraArgs\":[\"--insecure\"],\"ingress\":{\"annotations\":{\"nginx.ingress.kubernetes.io/backend-protocol\":\"HTTP\",\"nginx.ingress.kubernetes.io/force-ssl-redirect\":\"false\",\"nginx.ingress.kubernetes.io/ssl-redirect\":\"false\"},\"enabled\":true,\"hosts\":[\"argocd.local\"],\"ingressClassName\":\"nginx\",\"paths\":[\"/\"]},\"insecure\":true}}",
              "version": "5.51.5"
            },
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "values": [
              "\"server\":\n  \"extraArgs\":\n  - \"--insecure\"\n  \"ingress\":\n    \"annotations\":\n      \"nginx.ingress.kubernetes.io/backend-protocol\": \"HTTP\"\n      \"nginx.ingress.kubernetes.io/force-ssl-redirect\": \"false\"\n      \"nginx.ingress.kubernetes.io/ssl-redirect\": \"false\"\n    \"enabled\": true\n    \"hosts\":\n    - \"argocd.local\"\n    \"ingressClassName\": \"nginx\"\n    \"paths\":\n    - \"/\"\n  \"insecure\": true\n"
            ],
            "verify": false,
            "version": "5.51.5",
            "wait": true,
            "wait_for_jobs": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "argocd",
            "release_name": "argocd"
          },
          "dependencies": [
            "helm_release.metallb",
            "helm_release.nginx_ingress",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.argocd",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system",
            "null_resource.remove_node_label"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "external_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "external-secrets",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "external-secrets",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v0.9.1",
              "chart": "external-secrets",
              "first_deployed": 1760682028,
              "last_deployed": 1760682028,
              "name": "external-secrets",
              "namespace": "external-secrets",
              "notes": "external-secrets has been deployed successfully!\n\nIn order to begin using ExternalSecrets, you will need to set up a SecretStore\nor ClusterSecretStore resource (for example, by creating a 'vault' SecretStore).\n\nMore information on the different types of SecretStores and how to configure them\ncan be found in our Github: https://github.com/external-secrets/external-secrets\n\n",
              "revision": 1,
              "values": "{}",
              "version": "0.9.1"
            },
            "name": "external-secrets",
            "namespace": "external-secrets",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.external-secrets.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.9.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "external-secrets",
            "release_name": "external-secrets"
          },
          "dependencies": [
            "kubernetes_namespace.external_secrets"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "longhorn",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "longhorn",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "longhorn",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v1.7.2",
              "chart": "longhorn",
              "first_deployed": 1760688429,
              "last_deployed": 1760688429,
              "name": "longhorn",
              "namespace": "longhorn-system",
              "notes": "Longhorn is now installed on the cluster!\n\nPlease wait a few minutes for other Longhorn components such as CSI deployments, Engine Images, and Instance Managers to be initialized.\n\nVisit our documentation at https://longhorn.io/docs/\n",
              "revision": 1,
              "values": "{\"defaultSettings\":{\"defaultReplicaCount\":1,\"replicaAutoBalance\":\"disabled\",\"replicaSoftAntiAffinity\":\"false\",\"storageMinimalAvailablePercentage\":10},\"ingress\":{\"enabled\":false},\"longhornDriver\":{\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"256Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}}},\"longhornManager\":{\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"256Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"}}},\"longhornUI\":{\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"64Mi\"}}},\"persistence\":{\"defaultClass\":true,\"defaultClassReplicaCount\":1,\"reclaimPolicy\":\"Delete\"}}",
              "version": "1.7.2"
            },
            "name": "longhorn",
            "namespace": "longhorn-system",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.longhorn.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 600,
            "values": [
              "\"defaultSettings\":\n  \"defaultReplicaCount\": 1\n  \"replicaAutoBalance\": \"disabled\"\n  \"replicaSoftAntiAffinity\": \"false\"\n  \"storageMinimalAvailablePercentage\": 10\n\"ingress\":\n  \"enabled\": false\n\"longhornDriver\":\n  \"resources\":\n    \"limits\":\n      \"cpu\": \"200m\"\n      \"memory\": \"256Mi\"\n    \"requests\":\n      \"cpu\": \"100m\"\n      \"memory\": \"128Mi\"\n\"longhornManager\":\n  \"resources\":\n    \"limits\":\n      \"cpu\": \"200m\"\n      \"memory\": \"256Mi\"\n    \"requests\":\n      \"cpu\": \"100m\"\n      \"memory\": \"128Mi\"\n\"longhornUI\":\n  \"resources\":\n    \"limits\":\n      \"cpu\": \"100m\"\n      \"memory\": \"128Mi\"\n    \"requests\":\n      \"cpu\": \"50m\"\n      \"memory\": \"64Mi\"\n\"persistence\":\n  \"defaultClass\": true\n  \"defaultClassReplicaCount\": 1\n  \"reclaimPolicy\": \"Delete\"\n"
            ],
            "verify": false,
            "version": "1.7.2",
            "wait": true,
            "wait_for_jobs": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "longhorn-system",
            "release_name": "longhorn"
          },
          "dependencies": [
            "kubernetes_namespace.longhorn_system"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "metallb",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "metallb",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "metallb",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v0.14.5",
              "chart": "metallb",
              "first_deployed": 1760682028,
              "last_deployed": 1760682028,
              "name": "metallb",
              "namespace": "metallb-system",
              "notes": "MetalLB is now running in the cluster.\n\nNow you can configure it via its CRs. Please refer to the metallb official docs\non how to use the CRs.\n",
              "revision": 1,
              "values": "{}",
              "version": "0.14.5"
            },
            "name": "metallb",
            "namespace": "metallb-system",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://metallb.github.io/metallb",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.14.5",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "metallb-system",
            "release_name": "metallb"
          },
          "dependencies": [
            "kubernetes_namespace.metallb_system",
            "null_resource.remove_node_label"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nginx_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "ingress-nginx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "ingress-nginx",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "1.10.1",
              "chart": "ingress-nginx",
              "first_deployed": 1760682136,
              "last_deployed": 1760682136,
              "name": "ingress-nginx",
              "namespace": "ingress-nginx",
              "notes": "The ingress-nginx controller has been installed.\nIt may take a few minutes for the load balancer IP to be available.\nYou can watch the status by running 'kubectl get service --namespace ingress-nginx ingress-nginx-controller --output wide --watch'\n\nAn example Ingress that makes use of the controller:\n  apiVersion: networking.k8s.io/v1\n  kind: Ingress\n  metadata:\n    name: example\n    namespace: foo\n  spec:\n    ingressClassName: nginx\n    rules:\n      - host: www.example.com\n        http:\n          paths:\n            - pathType: Prefix\n              backend:\n                service:\n                  name: exampleService\n                  port:\n                    number: 80\n              path: /\n    # This section is only required if TLS is to be enabled for the Ingress\n    tls:\n      - hosts:\n        - www.example.com\n        secretName: example-tls\n\nIf TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:\n\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: example-tls\n    namespace: foo\n  data:\n    tls.crt: \u003cbase64 encoded cert\u003e\n    tls.key: \u003cbase64 encoded key\u003e\n  type: kubernetes.io/tls\n",
              "revision": 1,
              "values": "{}",
              "version": "4.10.1"
            },
            "name": "ingress-nginx",
            "namespace": "ingress-nginx",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/ingress-nginx",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "4.10.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "ingress-nginx",
            "release_name": "ingress-nginx"
          },
          "dependencies": [
            "helm_release.metallb",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system",
            "null_resource.remove_node_label"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "vault",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "vault",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "1.16.1",
              "chart": "vault",
              "first_deployed": 1760682188,
              "last_deployed": 1760682188,
              "name": "vault",
              "namespace": "vault",
              "notes": "\nThank you for installing HashiCorp Vault!\n\nNow that you have deployed Vault, you should look over the docs on using\nVault with Kubernetes available here:\n\nhttps://developer.hashicorp.com/vault/docs\n\n\nYour release is named vault. To learn more about the release, try:\n\n  $ helm status vault\n  $ helm get manifest vault\n\n",
              "revision": 1,
              "values": "{\"injector\":{\"enabled\":true},\"server\":{\"dataStorage\":{\"enabled\":true,\"size\":\"10Gi\",\"storageClass\":\"nfs-client-hdd\"},\"ingress\":{\"enabled\":true,\"hosts\":[{\"host\":\"vault.local\",\"paths\":[\"/\"]}],\"ingressClassName\":\"nginx\"},\"standalone\":{\"enabled\":true}},\"ui\":{\"enabled\":true}}",
              "version": "0.28.0"
            },
            "name": "vault",
            "namespace": "vault",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.releases.hashicorp.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "\"injector\":\n  \"enabled\": true\n\"server\":\n  \"dataStorage\":\n    \"enabled\": true\n    \"size\": \"10Gi\"\n    \"storageClass\": \"nfs-client-hdd\"\n  \"ingress\":\n    \"enabled\": true\n    \"hosts\":\n    - \"host\": \"vault.local\"\n      \"paths\":\n      - \"/\"\n    \"ingressClassName\": \"nginx\"\n  \"standalone\":\n    \"enabled\": true\n\"ui\":\n  \"enabled\": true\n"
            ],
            "verify": false,
            "version": "0.28.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "vault",
            "release_name": "vault"
          },
          "dependencies": [
            "helm_release.metallb",
            "helm_release.nginx_ingress",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system",
            "kubernetes_namespace.vault",
            "null_resource.remove_node_label"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "metallb_ipaddresspool",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "metallb.io/v1beta1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/metallb.io/v1beta1/namespaces/metallb-system/ipaddresspools/default-pool",
            "ignore_fields": null,
            "kind": "IPAddressPool",
            "live_manifest_incluster": "67a5385bafdbf9f8a972155aff47419848c9032d8e4239f013255745a9b2cfbb",
            "live_uid": "eab6d312-aea6-4627-b16f-71cebdd77176",
            "name": "default-pool",
            "namespace": "metallb-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "eab6d312-aea6-4627-b16f-71cebdd77176",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: default-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.90-192.168.10.99\n",
            "yaml_body_parsed": "apiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: default-pool\n  namespace: metallb-system\nspec:\n  addresses:\n  - 192.168.10.90-192.168.10.99\n",
            "yaml_incluster": "67a5385bafdbf9f8a972155aff47419848c9032d8e4239f013255745a9b2cfbb"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.metallb",
            "kubernetes_namespace.metallb_system",
            "null_resource.remove_node_label"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "metallb_l2advertisement",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "metallb.io/v1beta1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/metallb.io/v1beta1/namespaces/metallb-system/l2advertisements/default",
            "ignore_fields": null,
            "kind": "L2Advertisement",
            "live_manifest_incluster": "8a39d60e7e6c6a3b032278c513e89a9611ec01e169b15ec8035d9ddd0350721e",
            "live_uid": "393759e9-be7c-4b87-97f4-8573b354dc35",
            "name": "default",
            "namespace": "metallb-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "393759e9-be7c-4b87-97f4-8573b354dc35",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: default\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - default-pool\n",
            "yaml_body_parsed": "apiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: default\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n  - default-pool\n",
            "yaml_incluster": "8a39d60e7e6c6a3b032278c513e89a9611ec01e169b15ec8035d9ddd0350721e"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.metallb",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubernetes_namespace.metallb_system",
            "null_resource.remove_node_label"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "root_app",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "argoproj.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/argoproj.io/v1alpha1/namespaces/argocd/applications/root-applicationset",
            "ignore_fields": null,
            "kind": "Application",
            "live_manifest_incluster": "16c0aaf970e4ad210d1a635cfd0c350948ed9ac97e0d96306849733c8825ff43",
            "live_uid": "f4437fae-e93a-4ce2-8068-0f98ae4adacb",
            "name": "root-applicationset",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f4437fae-e93a-4ce2-8068-0f98ae4adacb",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: root-applicationset\n  namespace: argocd\n  finalizers:\n    - resources-finalizer.argocd.argoproj.io\nspec:\n  project: default\n  source:\n    repoURL: https://github.com/davidlesicnik/homelab-argo\n    targetRevision: master\n    path: apps\n  destination:\n    server: https://kubernetes.default.svc\n    namespace: argocd\n  syncPolicy:\n    automated:\n      prune: true\n      selfHeal: true\n",
            "yaml_body_parsed": "apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  finalizers:\n  - resources-finalizer.argocd.argoproj.io\n  name: root-applicationset\n  namespace: argocd\nspec:\n  destination:\n    namespace: argocd\n    server: https://kubernetes.default.svc\n  project: default\n  source:\n    path: apps\n    repoURL: https://github.com/davidlesicnik/homelab-argo\n    targetRevision: master\n  syncPolicy:\n    automated:\n      prune: true\n      selfHeal: true\n",
            "yaml_incluster": "16c0aaf970e4ad210d1a635cfd0c350948ed9ac97e0d96306849733c8825ff43"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd",
            "helm_release.metallb",
            "helm_release.nginx_ingress",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.argocd",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system",
            "null_resource.remove_node_label",
            "terraform_data.argocd_ready",
            "time_sleep.wait_for_argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "pod-security.kubernetes.io/enforce": "baseline"
                },
                "name": "argocd",
                "resource_version": "105790",
                "uid": "ec3c0408-f571-4edb-9b9c-2e6628b62cba"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "argocd"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "external_secrets",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "external-secrets",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "external-secrets",
                "resource_version": "110939",
                "uid": "7064b341-fc73-45cf-a1d4-e96d149c4342"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "external-secrets"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ingress_nginx",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ingress-nginx",
                "resource_version": "105792",
                "uid": "edbf437d-765c-4380-9ee4-1970203c1d6e"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "ingress-nginx"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "longhorn_system",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "longhorn-system",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "pod-security.kubernetes.io/audit": "privileged",
                  "pod-security.kubernetes.io/enforce": "privileged",
                  "pod-security.kubernetes.io/warn": "privileged"
                },
                "name": "longhorn-system",
                "resource_version": "141323",
                "uid": "b7ab2f28-f77b-4759-9621-f512b89bc24f"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "longhorn-system"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "metallb_system",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "metallb-system",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "pod-security.kubernetes.io/audit": "privileged",
                  "pod-security.kubernetes.io/enforce": "privileged",
                  "pod-security.kubernetes.io/warn": "privileged"
                },
                "name": "metallb-system",
                "resource_version": "105807",
                "uid": "359f08fc-72af-4fca-8cfb-cb278b58cc72"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "metallb-system"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "null_resource.remove_node_label"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "nfs_provisioner",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "nfs-provisioner",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "nfs-provisioner",
                "resource_version": "110938",
                "uid": "2306e076-68af-4b97-b666-c0354a6d255f"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "nfs-provisioner"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "vault",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "vault",
                "resource_version": "105788",
                "uid": "fddac93a-8bcb-4da7-979d-cbc287a0eac1"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 1,
          "identity": {
            "api_version": "v1",
            "kind": "Namespace",
            "name": "vault"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "remove_node_label",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3140916297977636461",
            "triggers": {
              "always_run": "2025-10-17T08:07:07Z"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "argocd_ready",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "a66dbda2-25c4-71e3-65a7-ea92ab75dcdf",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.argocd",
            "helm_release.metallb",
            "helm_release.nginx_ingress",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.argocd",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system",
            "null_resource.remove_node_label",
            "time_sleep.wait_for_argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "time_sleep",
      "name": "wait_for_argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "create_duration": "60s",
            "destroy_duration": null,
            "id": "2025-10-13T10:32:27Z",
            "triggers": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "helm_release.argocd",
            "helm_release.metallb",
            "helm_release.nginx_ingress",
            "kubectl_manifest.metallb_ipaddresspool",
            "kubectl_manifest.metallb_l2advertisement",
            "kubernetes_namespace.argocd",
            "kubernetes_namespace.ingress_nginx",
            "kubernetes_namespace.metallb_system",
            "null_resource.remove_node_label"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
